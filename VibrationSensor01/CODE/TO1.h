/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : TO1.h
**     Project   : VibrationSensor01
**     Processor : MC9S08JM60CLDE
**     Component : TimerOut
**     Version   : Component 03.021, Driver 01.22, CPU db: 3.00.046
**     Compiler  : CodeWarrior HCS08 C Compiler
**     Date/Time : 2/23/2011, 7:24 PM
**     Abstract  :
**         This component implements a periodic signal generator 1:1 (Flip-Flop Output).
**         The signal alternates the "0" and "1" output values in exactly
**         regular intervals; that is why the time length of the "0" part
**         of one pulse is equal to the "1" part of one pulse.
**     Settings  :
**         Used output pin             : 
**             ----------------------------------------------------
**                Number (on package)  |    Name
**             ----------------------------------------------------
**                       6             |  PTF4_TPM2CH0
**             ----------------------------------------------------
**
**         Timer name                  : TPM2 (16-bit)
**         Compare name                : TPM20
**           Counter shared            : No
**
**         High speed mode
**             Prescaler               : divide-by-1
**             Clock                   : 24000000 Hz
**           Pulse width
**             Xtal ticks              : 400
**             microseconds            : 33
**             seconds (real)          : 0.000033333333
**             Hz                      : 30000
**             kHz                     : 30
**
**         Runtime setting             : none
**
**         Initialization:
**              Output level           : low
**              Timer                  : Enabled
**              Events                 : Enabled
**
**         Timer registers
**              Counter                : TPM2CNT   [$0061]
**              Mode                   : TPM2SC    [$0060]
**              Run                    : TPM2SC    [$0060]
**              Prescaler              : TPM2SC    [$0060]
**
**         Compare registers
**              Compare                : TPM2C0V   [$0066]
**
**         Flip-flop registers
**              Mode                   : TPM2C0SC  [$0065]
**     Contents  :
**         No public methods
**
**     Copyright : 1997 - 2010 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __TO1
#define __TO1

/* MODULE TO1. */

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "Cpu.h"

void TO1_InitTO(void);
/*
** ===================================================================
**     Method      :  TO1_InitTO (component TimerOut)
**
**     Description :
**         Initializes the associated peripheral(s) and the component 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

#define TO1_SetCV(_Val) { \
  TPM2C0V = (word)_Val; \
  TPM2MOD = (word)_Val; \
}
/*
** ===================================================================
**     Method      :  SetCV (component TimerOut)
**
**     Description :
**         The method computes and sets compare eventually modulo value 
**         for time measuring.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/


/* END TO1. */

#endif /* ifndef __TO1 */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.09 [04.41]
**     for the Freescale HCS08 series of microcontrollers.
**
** ###################################################################
*/
